// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/main/resources/otel-proto/trace.proto
// Protobuf Java Version: 4.29.3

package io.opentelemetry.proto.trace.v1;

public final class TraceProto {
  private TraceProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      TraceProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_TracesData_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_ResourceSpans_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_ScopeSpans_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_Event_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Span_Link_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_trace_v1_Status_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)src/main/resources/otel-proto/trace.pr" +
      "oto\022\034opentelemetry.proto.trace.v1\032*src/m" +
      "ain/resources/otel-proto/common.proto\032,s" +
      "rc/main/resources/otel-proto/resource.pr" +
      "oto\"Q\n\nTracesData\022C\n\016resource_spans\030\001 \003(" +
      "\0132+.opentelemetry.proto.trace.v1.Resourc" +
      "eSpans\"\247\001\n\rResourceSpans\022;\n\010resource\030\001 \001" +
      "(\0132).opentelemetry.proto.resource.v1.Res" +
      "ource\022=\n\013scope_spans\030\002 \003(\0132(.opentelemet" +
      "ry.proto.trace.v1.ScopeSpans\022\022\n\nschema_u" +
      "rl\030\003 \001(\tJ\006\010\350\007\020\351\007\"\227\001\n\nScopeSpans\022B\n\005scope" +
      "\030\001 \001(\01323.opentelemetry.proto.common.v1.I" +
      "nstrumentationScope\0221\n\005spans\030\002 \003(\0132\".ope" +
      "ntelemetry.proto.trace.v1.Span\022\022\n\nschema" +
      "_url\030\003 \001(\t\"\204\010\n\004Span\022\020\n\010trace_id\030\001 \001(\014\022\017\n" +
      "\007span_id\030\002 \001(\014\022\023\n\013trace_state\030\003 \001(\t\022\026\n\016p" +
      "arent_span_id\030\004 \001(\014\022\r\n\005flags\030\020 \001(\007\022\014\n\004na" +
      "me\030\005 \001(\t\0229\n\004kind\030\006 \001(\0162+.opentelemetry.p" +
      "roto.trace.v1.Span.SpanKind\022\034\n\024start_tim" +
      "e_unix_nano\030\007 \001(\006\022\032\n\022end_time_unix_nano\030" +
      "\010 \001(\006\022;\n\nattributes\030\t \003(\0132\'.opentelemetr" +
      "y.proto.common.v1.KeyValue\022 \n\030dropped_at" +
      "tributes_count\030\n \001(\r\0228\n\006events\030\013 \003(\0132(.o" +
      "pentelemetry.proto.trace.v1.Span.Event\022\034" +
      "\n\024dropped_events_count\030\014 \001(\r\0226\n\005links\030\r " +
      "\003(\0132\'.opentelemetry.proto.trace.v1.Span." +
      "Link\022\033\n\023dropped_links_count\030\016 \001(\r\0224\n\006sta" +
      "tus\030\017 \001(\0132$.opentelemetry.proto.trace.v1" +
      ".Status\032\214\001\n\005Event\022\026\n\016time_unix_nano\030\001 \001(" +
      "\006\022\014\n\004name\030\002 \001(\t\022;\n\nattributes\030\003 \003(\0132\'.op" +
      "entelemetry.proto.common.v1.KeyValue\022 \n\030" +
      "dropped_attributes_count\030\004 \001(\r\032\254\001\n\004Link\022" +
      "\020\n\010trace_id\030\001 \001(\014\022\017\n\007span_id\030\002 \001(\014\022\023\n\013tr" +
      "ace_state\030\003 \001(\t\022;\n\nattributes\030\004 \003(\0132\'.op" +
      "entelemetry.proto.common.v1.KeyValue\022 \n\030" +
      "dropped_attributes_count\030\005 \001(\r\022\r\n\005flags\030" +
      "\006 \001(\007\"\231\001\n\010SpanKind\022\031\n\025SPAN_KIND_UNSPECIF" +
      "IED\020\000\022\026\n\022SPAN_KIND_INTERNAL\020\001\022\024\n\020SPAN_KI" +
      "ND_SERVER\020\002\022\024\n\020SPAN_KIND_CLIENT\020\003\022\026\n\022SPA" +
      "N_KIND_PRODUCER\020\004\022\026\n\022SPAN_KIND_CONSUMER\020" +
      "\005\"\256\001\n\006Status\022\017\n\007message\030\002 \001(\t\022=\n\004code\030\003 " +
      "\001(\0162/.opentelemetry.proto.trace.v1.Statu" +
      "s.StatusCode\"N\n\nStatusCode\022\025\n\021STATUS_COD" +
      "E_UNSET\020\000\022\022\n\016STATUS_CODE_OK\020\001\022\025\n\021STATUS_" +
      "CODE_ERROR\020\002J\004\010\001\020\002*\234\001\n\tSpanFlags\022\031\n\025SPAN" +
      "_FLAGS_DO_NOT_USE\020\000\022 \n\033SPAN_FLAGS_TRACE_" +
      "FLAGS_MASK\020\377\001\022*\n%SPAN_FLAGS_CONTEXT_HAS_" +
      "IS_REMOTE_MASK\020\200\002\022&\n!SPAN_FLAGS_CONTEXT_" +
      "IS_REMOTE_MASK\020\200\004Bw\n\037io.opentelemetry.pr" +
      "oto.trace.v1B\nTraceProtoP\001Z\'go.opentelem" +
      "etry.io/proto/otlp/trace/v1\252\002\034OpenTeleme" +
      "try.Proto.Trace.V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.opentelemetry.proto.common.v1.CommonProto.getDescriptor(),
          io.opentelemetry.proto.resource.v1.ResourceProto.getDescriptor(),
        });
    internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opentelemetry_proto_trace_v1_TracesData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_TracesData_descriptor,
        new java.lang.String[] { "ResourceSpans", });
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opentelemetry_proto_trace_v1_ResourceSpans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_ResourceSpans_descriptor,
        new java.lang.String[] { "Resource", "ScopeSpans", "SchemaUrl", });
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_opentelemetry_proto_trace_v1_ScopeSpans_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_ScopeSpans_descriptor,
        new java.lang.String[] { "Scope", "Spans", "SchemaUrl", });
    internal_static_opentelemetry_proto_trace_v1_Span_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_opentelemetry_proto_trace_v1_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_descriptor,
        new java.lang.String[] { "TraceId", "SpanId", "TraceState", "ParentSpanId", "Flags", "Name", "Kind", "StartTimeUnixNano", "EndTimeUnixNano", "Attributes", "DroppedAttributesCount", "Events", "DroppedEventsCount", "Links", "DroppedLinksCount", "Status", });
    internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor =
      internal_static_opentelemetry_proto_trace_v1_Span_descriptor.getNestedTypes().get(0);
    internal_static_opentelemetry_proto_trace_v1_Span_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_Event_descriptor,
        new java.lang.String[] { "TimeUnixNano", "Name", "Attributes", "DroppedAttributesCount", });
    internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor =
      internal_static_opentelemetry_proto_trace_v1_Span_descriptor.getNestedTypes().get(1);
    internal_static_opentelemetry_proto_trace_v1_Span_Link_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Span_Link_descriptor,
        new java.lang.String[] { "TraceId", "SpanId", "TraceState", "Attributes", "DroppedAttributesCount", "Flags", });
    internal_static_opentelemetry_proto_trace_v1_Status_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_opentelemetry_proto_trace_v1_Status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_opentelemetry_proto_trace_v1_Status_descriptor,
        new java.lang.String[] { "Message", "Code", });
    descriptor.resolveAllFeaturesImmutable();
    io.opentelemetry.proto.common.v1.CommonProto.getDescriptor();
    io.opentelemetry.proto.resource.v1.ResourceProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
